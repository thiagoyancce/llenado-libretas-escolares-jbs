/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package recursos;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

/**
 *
 * @author Admin
 */
public class FormCompetencias extends javax.swing.JFrame {
    private Lista listaDirectory;
    private File rutaPlantilla;
    private File rutaSalida;
    
    DefaultListModel modelo=new DefaultListModel();
    /** Creates new form FormPrincipal */
    public FormCompetencias() {
        initComponents();
        jListDirectory.setModel(modelo);
        listaDirectory=new Lista();
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDirectory = new javax.swing.JList<>();
        jButtonLoadRegister = new javax.swing.JButton();
        jButtonLoadDirectory = new javax.swing.JButton();
        jButtonDeleteItem = new javax.swing.JButton();
        jButtonProcess = new javax.swing.JButton();
        jLabelRouteOutput = new javax.swing.JLabel();
        jButtonChangeDirectoryOutput = new javax.swing.JButton();
        jComboBoxBimestre = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaEstado = new javax.swing.JTextArea();
        jButtonDeleteAll = new javax.swing.JButton();
        jButtonRegresar = new javax.swing.JButton();
        jButtonRevisarArchivos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Competencias Transversales");

        jListDirectory.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListDirectory);

        jButtonLoadRegister.setBackground(new java.awt.Color(204, 255, 204));
        jButtonLoadRegister.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButtonLoadRegister.setText("Cargar Registro");
        jButtonLoadRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadRegisterActionPerformed(evt);
            }
        });

        jButtonLoadDirectory.setBackground(new java.awt.Color(204, 255, 204));
        jButtonLoadDirectory.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButtonLoadDirectory.setText("Cargar Directorio");
        jButtonLoadDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadDirectoryActionPerformed(evt);
            }
        });

        jButtonDeleteItem.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButtonDeleteItem.setText("Borrar Item");
        jButtonDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteItemActionPerformed(evt);
            }
        });

        jButtonProcess.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButtonProcess.setText("Procesar");
        jButtonProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcessActionPerformed(evt);
            }
        });

        jLabelRouteOutput.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelRouteOutput.setText("  ");

        jButtonChangeDirectoryOutput.setText("Seleccionar directorio de salida");
        jButtonChangeDirectoryOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeDirectoryOutputActionPerformed(evt);
            }
        });

        jComboBoxBimestre.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jComboBoxBimestre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "I Bimestre", "II Bimestre", "III Bimestre", "IV Bimestre" }));
        jComboBoxBimestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBimestreActionPerformed(evt);
            }
        });

        jTextAreaEstado.setColumns(20);
        jTextAreaEstado.setRows(5);
        jScrollPane2.setViewportView(jTextAreaEstado);

        jButtonDeleteAll.setText("BorrarTodo");
        jButtonDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteAllActionPerformed(evt);
            }
        });

        jButtonRegresar.setText("Regresar");
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });

        jButtonRevisarArchivos.setText("Revisar Archivos");
        jButtonRevisarArchivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRevisarArchivosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonRevisarArchivos)
                        .addGap(111, 111, 111)
                        .addComponent(jButtonDeleteItem)
                        .addGap(45, 45, 45)
                        .addComponent(jButtonDeleteAll)
                        .addGap(89, 89, 89))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonRegresar)
                                    .addGap(40, 40, 40))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabelRouteOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addComponent(jButtonChangeDirectoryOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                    .addComponent(jButtonProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButtonLoadRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonLoadDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(9, 9, 9)
                                    .addComponent(jComboBoxBimestre, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(35, 35, 35)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButtonLoadRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLoadDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jComboBoxBimestre, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDeleteItem)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jButtonRevisarArchivos)))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonChangeDirectoryOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelRouteOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jButtonRegresar))))
                    .addComponent(jButtonDeleteAll))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoadRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadRegisterActionPerformed
        cargarRutaArchivo();
        
    }//GEN-LAST:event_jButtonLoadRegisterActionPerformed

    private void jButtonLoadDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadDirectoryActionPerformed
        cargarRutaCarpeta();
         jTextAreaEstado.append("\n Directorio cargado con "+ listaDirectory.darTamaño()+" archivos");
    }//GEN-LAST:event_jButtonLoadDirectoryActionPerformed

    private void jButtonDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteItemActionPerformed
        eliminarElemento();
         jTextAreaEstado.append("\n Archivo eliminado");
    }//GEN-LAST:event_jButtonDeleteItemActionPerformed

    private void jButtonProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcessActionPerformed
        try {
            procesarArchivos();
        } catch (IOException ex) {
            Logger.getLogger(FormCompetencias.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonProcessActionPerformed

    private void jButtonChangeDirectoryOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeDirectoryOutputActionPerformed
        cargarDirectorioSalida();
         jTextAreaEstado.append("\n direccion de salida  identificada");
    }//GEN-LAST:event_jButtonChangeDirectoryOutputActionPerformed

    private void jComboBoxBimestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBimestreActionPerformed
        
        jTextAreaEstado.append("\n  "+(String) jComboBoxBimestre.getSelectedItem()+" seleccionado");
    }//GEN-LAST:event_jComboBoxBimestreActionPerformed

    private void jButtonDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteAllActionPerformed
        LimpiarTodo();
    
    }//GEN-LAST:event_jButtonDeleteAllActionPerformed

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
       this.setVisible(false);
      new Principal().setVisible(true);
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    private void jButtonRevisarArchivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRevisarArchivosActionPerformed

        String  bimestre="I Bimestre";
        bimestre=(String) jComboBoxBimestre.getSelectedItem();
        Prueba prueba=new Prueba(Integer.parseInt(seleccionarBimestre(bimestre)));
        prueba.revisar(listaDirectory);
        new FormPrueba(prueba.resultado(),listaDirectory.darTamaño()).setVisible(true);
        jTextAreaEstado.setText("");

    }//GEN-LAST:event_jButtonRevisarArchivosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCompetencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCompetencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCompetencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCompetencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCompetencias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonChangeDirectoryOutput;
    private javax.swing.JButton jButtonDeleteAll;
    private javax.swing.JButton jButtonDeleteItem;
    private javax.swing.JButton jButtonLoadDirectory;
    private javax.swing.JButton jButtonLoadRegister;
    private javax.swing.JButton jButtonProcess;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JButton jButtonRevisarArchivos;
    private javax.swing.JComboBox<String> jComboBoxBimestre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelRouteOutput;
    private javax.swing.JList<String> jListDirectory;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaEstado;
    // End of variables declaration//GEN-END:variables

    private void cargarRutaCarpeta() {
        JFileChooser jf=new JFileChooser();
        jf.setCurrentDirectory(new File("."));
        jf.setDialogTitle("Select Directorio");
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jf.setAcceptAllFileFilterUsed(false);
        
        if(jf.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            jf.getCurrentDirectory();
            File ruta=jf.getSelectedFile();
            //System.out.println(ruta);
         
            listaDirectory.agregarDirectorios(ruta.toString(),ruta.list());
           // listaDirectory.mostrarLista();
            llenarJlist();
            
        }
        
// jf.showOpenDialog(this);
        
       // File ruta=new File("B:\\Instituto");
        
             
        
       
    }

    private void cargarRutaArchivo() {
         JFileChooser jf=new JFileChooser();
        jf.setDialogTitle("Select Directorio");     
        if(jf.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {        
            File ruta=jf.getSelectedFile();
            listaDirectory.agregarDirectorio(ruta.toString());

            llenarJlist();
            jTextAreaEstado.append("\n archivo cargado");
            
        }
    }
    private void llenarJlist(){
         modelo.removeAllElements();
         for (int i = 0; i < listaDirectory.darTamaño(); i++) {
                modelo.addElement(listaDirectory.darLista().get(i));
            }
    }
    private void cargarPlantilla() {
       JFileChooser jf=new JFileChooser();
        jf.setDialogTitle("Seleccionar plantilla");     
        if(jf.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {        
            rutaPlantilla=jf.getSelectedFile();
        }
    }

    private void eliminarElemento() {
        int index=-1;
        index=jListDirectory.getSelectedIndex();
        System.out.println("index "+index);
        if (index!=-1) {
                 listaDirectory.eliminarDirectorio(index);
        }
        llenarJlist();
              
   
    }

    private void procesarArchivos() throws IOException {
        String  bimestre="I Bimestre";
        bimestre=(String) jComboBoxBimestre.getSelectedItem();
        
      RegistroCompetencias registro=new RegistroCompetencias(Integer.parseInt(seleccionarBimestre( bimestre)));
      Competencias competencias=new Competencias(rutaSalida.toString());
        for (int i = 0; i < listaDirectory.darTamaño(); i++) {
          
            registro.procesarDatos(listaDirectory.darElemento(i));
            String[][] notas =registro.recogerNotas();
            String[] datosBAG=registro.recogerDatos();
            competencias.procesarDatos(notas,datosBAG);
             // consolidado.exito();
        }
        jTextAreaEstado.append("\n Finalizado ");
    }
      private String seleccionarBimestre(String bimestre) {
        switch(bimestre){
            case "I Bimestre": return "0";
            case "II Bimestre": return "1";
            case "III Bimestre": return "2";
            case "IV Bimestre": return "3";
            default:return "-1";
            
        
        }
      }
    private void cargarDirectorioSalida() {
       JFileChooser jf=new JFileChooser();
        jf.setCurrentDirectory(new File("."));
        jf.setDialogTitle("Select Directorio");
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jf.setAcceptAllFileFilterUsed(false);
        
        if(jf.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
        {
            jf.getCurrentDirectory();
            rutaSalida=jf.getSelectedFile();
            jLabelRouteOutput.setText(rutaSalida.toString());
        }
    }

    private void LimpiarTodo() {
        listaDirectory= new Lista();
        
        llenarJlist();
    }
    

}
